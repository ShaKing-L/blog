{"meta":{"title":"Shaking","subtitle":"","description":"","author":"Shaking","url":"http://yoursite.com","root":"/blog/"},"pages":[],"posts":[{"title":"Linux学习笔记","slug":"Linux学习笔记","date":"2020-05-15T12:02:22.000Z","updated":"2020-05-28T09:33:02.981Z","comments":true,"path":"2020/05/15/Linux学习笔记/","link":"","permalink":"http://yoursite.com/2020/05/15/Linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"Linux 的目录结构基本介绍：级层式的树状目录结构，在此结构中的最上层是根目录“/” 在Linux世界里，一切皆文件 Linux目录总结：​ 1) Linux的目录中有且只有一个根目录 ​ 2) Linux的各个目录村坊的目录是规划好的，不用乱放文件 ​ 3) Linux是以文件的形式管理我们的设备，因此Linux系统，一切皆文件 ​ 4) Linux的各个文件目录下存放什么内容，大家必须有一个认识 ​ 5) 学习后脑海中应该有一棵目录树 远程登录Linux系统为什么要远程登录LinuxLinux一般在机房，去机房操作不现实，就需要远程登录 常用软件Xshell Xftp vi 和 vim 编辑器基本介绍所有的Linux系统内都会内建vi文本编辑器 Vim具有程序编辑的能力，可以看作是 Vi的增强版本，可以主动地以字体颜色辨别语法的正确性，方便程序设计。 vi 和 vim 的三种常见模式正常模式 (ESC)在正常模式下，可以使用快捷键 插入模式/编辑模式 ( i a )在模式下，程序员可以输入内容 按下 i, I, o , O , a , A , r , R 等任何一个子母之后才会进入编辑模式，一般来说按 i 即可 命令行模式 ( : / )提供你相关指令，完成读取、存盘、替换、离开vim、显示行号丹尼尔功的动作 开机、重启和用户登录关机&amp;重启命令基本介绍shutdown shutdown -h now: 表示立即关机 shutdown -h 1: 表示一分钟后关机 shutdown -r now: 立即重启 halt ​ 就是直接使用，等价与关机 reboot ​ 就是重启 sync ​ 把内存的数据同步到磁盘 当我们关机或者重启时，都应该先执行一下sync指令，把内存的数据写入磁盘，防止数据丢失！！ 用户登录和注销基本介绍1）登录时尽量少用root帐号登陆，因为他是系统管理员，最大的权限，避免操作失误。可以利用普通用户登录，登录后再用”su - 用户名”，，命令来切换成系统管理员身份 2）在提示符下输入 logout 即可注销用户 logout注销指令在图形化界面（运行级别）无效，远程登录有效！！ 用户管理基本介绍 说明： 1）Linux系统是一个多用户多任务的操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个帐号，然后以这个帐号的身份进入系统 2）Linux的用户需要至少属于一个组 添加用户基本语法useradd [选项] 用户名 实际案例添加一个用户xm cd 表示 change directory ，切换目录 细节说明1）当创建用户成功后，会自动的创建和用户同名的家目录 2）也可以通过useradd -d 指定目录新的用户名，并给新创建的用户指定家目录 给用户指定或修改密码基本语法passwd 用户名 实际案例 设置密码时,密码是密文，看不见 删除用户基本语法userdel 用户名 应用案例1）删除用户xm，但是要保存家目录 2）删除用户xq以及用户主目录 *在删除用户时，我们一般不会将家目录删除 * 查询用户信息基本语法id 用户名 应用实例查询root信息 当用户不存在时，返回无此用户 切换用户介绍在Linux中，如果用户的权限不够，可以通过 su- 指令，切换到高权限用户，比如root 基本语法su- 切换用户名 应用实例创建一个用户zf，指定密码，然后切换到zf 从权限高的用户切换到权限低的用户，不需要输入密码，反之需要 *当需要返回到原来用户时，使用exit指令 * 用户组介绍类似于角色，系统可以对有共性的多个用户进行统一的管理 增加组groupadd 组名 案例演示 删除组groupdel 案例演示 增加用户时直接加上组useradd -g 用户组 用户名 案例演示增加一个用户 zwj，直接将它指定到 wudang 修改用户组usermod -g 用户组 用户名 案例演示创建一个shaolin组，将zwj用户修改到shaolin组 用户和组的相关文件/etc/passwd文件用户（user）的配置文件，记录用户的各种信息 每一行的含义：用户名：口令：用户标识号：组标识号：注释性描述：主目录：登录shell /etc/shadow文件口令的配置文件 /etc/group文件组（group）的配置文件，记录Linux包含的组的信息 每行含义：组名：口令：组标识号：组内用户列表 实用指令指定运行级别 运行级别说明： 运行级别说明： 0 ：关机 1 ：单用户【找回丢失密码】 2：多用户状态没有网络服务 3：多用户状态有网络服务 4：系统未使用保留给用户 5：图形界面 6：系统重启 常用运行级别是 3 和 5 ，要修改默认的运行级别可改文件 /etc/inittab 的 id:5:initdefault:这一行中的数字 切换到指定运行级别的指令基本语法init [0123456] 应用实例案例1:通过 init 来切换不同的运行级别，比如动 5-&gt;3 ， 然后关机 init 3 init 5 init 0 面试题：如何找回root密码演示和图片均为 CentOS 6 思路：进入到单用户模式，然后修改root密码。因为进入单用户模式，root不需要密码就可以登录。 演示（注意观察）： 总结：开机 -&gt; 在引导时输入 回车键 -&gt; 看到一个界面输入e -&gt; 看到一个新的界面，选中第二行（编辑内核）再输入e -&gt; 在这行最后输入 1，再输入 回车键 -&gt; 再次输入b，这时就会进入到单用户模式。 这时，我们就进入到单用户模式，使用passwd指令来修改root密码。 帮助指令介绍当我们对某个指令不熟悉时，我们可以使用Linux提供的帮助指令来了解这个指令的使用方法。 man获得帮助信息基本语法man [命令或配置文件] (功能描述：获得帮助信息) 应用实例案例：查看ls命令的帮助信息 help指令基本语法help 命令 (功能描述：获得shell内置命令的帮助信息) 应用实例案例：查看cd命令的帮助信息 文件目录类pwd 指令基本语法pwd (功能描述：显示当前工作目录的绝对路径) 应用案例案例：显示当前工作目录的绝对路径 ls 指令基本语法ls [选项] [目录或是文件] 常用选项-a ：显示当前目录所有的文件和目录，包括隐藏的 -l：以列表的方式显示信息 应用实例案例：查看当前目录的所有内容信息 cd 指令基本语法cd [参数] (功能描述：切换到指定目录) 常用参数绝对路径和相对路径 应用实例案例1:使用绝对路径切换到 root 目录 cd /root 案例 2: 使用相对路径到/root 目录 这里我们需要知道该用户目录在哪个目录下，才能写出这个指令，假设在/usr/lib cd ../../root 案例 3：表示回到当前目录的上一级目录 cd .. 案例 4：回到家目录 cd cd ~ mkdir 指令mkdir 指令用于创建目录(make directory) 基本语法mkdir [选项] 要创建的目录 常用选项-p ：创建多级目录 应用实例案例1 ：创建一个目录/home/dog 案例 2:创建多级目录 /home/animal/tiger rmdir 指令介绍rmdir 指令删除空目录 基本语法rmdir [选项] 要删除的空目录 应用实例案例 1:删除一个目录 /home/dog 使用细节rmdir 删除的是空目录，如果目录下有内容时无法删除的。 提示：如果需要删除非空目录，需要使用 rm -rf 要删除的目录 touch指令touch 指令创建空文件 基本语法touch 文件名称 应用实例案例1：创建一个空文件 hello.txt 案例2：创建两个空文件 ok1.txt ok2.txt cp 指令[重要]cp 指令拷贝文件到指定目录 基本语法cp [选项] source dest 常用选项-r ：递归复制整个文件夹 应用实例案例 1: 将 /home/aaa.txt 拷贝到 /home/bbb 目录下[拷贝单个文件] 例 2: 递归复制整个文件夹，举例将/home/test 整个目录拷贝到/home/zwj 目录 \\cp为强制覆盖文件夹中原来的文件，不会提示 rm 指令rm 指令移除【删除】文件或目录 基本语法rm [选项] 要删除的文件或目录 常用选项-r ：递归删除整个文件夹 -f ： 强制删除不提示 实用案例案例1: 将 /home/aaa.txt 删除 案例2: 递归删除整个文件夹 /home/bbb 使用细节强制删除不提示的方法：带上 -f 参数即可 mv 指令mv 移动文件与目录或重命名 基本语法mv oldNameFile newNameFile (功能描述：重命名) mv /temp/movefile /targetFolder (功能描述：移动文件) 应用实例案例1: 将 /home/aaa.txt 文件重命名为pig.txt 案例2: 将 /home/pig.txt 文件移动到 /root 目录下 cat 指令cat 查看文件内容，是以只读的方式打开。 基本语法cat [选项] 要查看的文件 常用选项-n ：显示行号 应用案例案例1: /etc/profile 文件内容，并显示行号 使用细节cat只能浏览文件，而不能修改文件，为了浏览方便，一般会带上管道命令 | more cat 文件名 | more [分页浏览] more 指令more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more 指令中内置了若干快捷键，详见操作说明 基本语法more 要查看的文件 应用实例案例: 采用 more 查看文件 /etc/profile 快捷键一览 less指令less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。 基本语法less 要查看的文件 应用实例案例：采用less查看一个大文件 /opt/红楼梦.txt 快捷键一览 操作 功能说明 空白键 向下翻动一页 [pagedown] 向下翻动一页 [pageup] 向上翻动一页 /字串 向下搜寻「字串」的功能；n：向下查找；N：向下查找； ?字串 向上搜寻「字串」的功能；n：向下查找；N：向下查找； q 离开less这个程序 &gt; 指令 和 &gt;&gt; 指令&gt; 指 令 和 &gt;&gt; 指 令 &gt; 输出重定向 : 会将原来的文件的内容覆盖 &gt;&gt; 追加： 不会覆盖原来文件的内容，而是追加到文件的尾部 基本语法1) ls -l &gt;文件 （功能描述：列表的内容写入文件 a.txt 中（覆盖写）） 说明：ls -l &gt; a.txt , 将 ls -l 的显示的内容覆盖写入到 a.txt 文件，如果该文件不存在，就创建该文件 2) ls -al &gt;&gt;文件（功能描述：列表的内容追加到文件 b.txt 的末尾） 3) cat 文件 1 &gt; 文件 2 （功能描述：将文件 1 的内容覆盖到文件 2） 4) echo “内容” &gt;&gt; 文件 应用实例案例 1: 将 /home 目录下的文件列表 写入到 /home/info.txt 中 案例 2: 将当前日历信息 追加到 /home/mycal 文件中 [提示 cal ] echo 指令echo 输出内容到控制台。 基本语法echo [选项] [输出内容] 应用实例案例：使用 echo指令输出环境变量，输出当前的环境路径 案例: 使用 echo 指令输出 hello,world! head 命令head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容 基本语法head 文件 (功能描述：查看文件头 10 行内容) head -n 5 文件 (功能描述：查看文件头 5 行内容，5 可以是任意行数) 应用实例案例: 查看/etc/profile 的前面 5 行代码 tail 指令tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的后 10 行内容 基本语法1) tail 文件 （功能描述：查看文件后 10 行内容） 2) tail -n 5 文件 (功能描述：查看文件后 5 行内容，5 可以是任意行数） 3) tail -f 文件 （功能描述：实时追踪该文档的所有更新，工作经常使用） 应用实例案例1: 查看/etc/profile 最后 5 行的代码 案例 2: 实时监控 mydate.txt , 看看到文件有变化时，是否看到， 实时的追加日期 ln 指令软链接也叫符号链接，类似于 windows 里的快捷方式，主要存放了链接其他文件的路径 基本语法ln -s [原文件或目录] [软链接名] （功能描述：给原文件创建一个软链接） 应用实例案例 1: 在/home 目录下创建一个软连接 linkToRoot，连接到 /root 目录 案例 2: 删除软连接 linkToRoot 细节说明当我们使用 pwd 指令查看目录时，仍然看到的是软链接所在目录。 history 指令查看已经执行过历史命令,也可以执行历史指令 基本语法history （功能描述：查看已经执行过历史命令） 应用实例案例 1: 显示所有的历史命令 案例 2: 显示最近使用过的 10 个指令 时间日期类date指令-显示当前日期基本语法1) date （功能描述：显示当前时间） 2) date +%Y （功能描述：显示当前年份） 3) date +%m （功能描述：显示当前月份） 4) date +%d （功能描述：显示当前是哪一天） 应用实例案例 1: 显示当前时间信息 案例 2: 显示当前时间年月日 案例 3: 显示当前时间年月日时分秒 date 指令-设置日期基本语法date -s 字符串时间 应用实例案例 1: 设置系统当前时间 ， 比如设置成 2018-10-10 11:22:22 cal 指令查看日历指令 基本语法cal [选项] （功能描述：不加选项，显示本月日历） 应用实例案例 1: 显示当前日历 搜索查找类find指令find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终端。 基本语法find [搜索范围] [选项] 选项说明 选项 功能 -name&lt;查询方式&gt; 按照指定的文件名查找模式查找文件 -user&lt;用户名&gt; 查找属于指定用户名所有文件 -size&lt;文件大小&gt; 按照指定的文件大小查找文件 应用实例案例 1: 按文件名：根据名称查找/home 目录下的 hello.txt 文件 案例 2：按拥有者：查找/opt 目录下，用户名称为 nobody 的文件 案例 3：查找整个 linux 系统下大于 20m 的文件（+n 大于 -n 小于 n 等于） 1m = 1024k 查询 / 目录下，所有 .txt 的文件 locate 指令locaate 指令可以快速定位文件路径。locate 指令利用事先建立的系统中所有文件名称及路径的locate 数据库实现快速定位给定的文件。Locate 指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新 locate 时刻。 基本语法locate 搜索文件 特别说明由于 locate 指令基于数据库进行查询，所以第一次运行前，必须使用 updatedb 指令创建 locate 数据库。 应用实例案例 1: 请使用 locate 指令快速定位 hello.txt 文件所在目录 grep 指令和 管道符号 |grep 过滤查找 ， 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理。 基本语法grep [选项] 查找内容 源文件 常用选项 选项 功能 -n 显示匹配行及行号 -i 忽略字母大小写 应用实例案例 1: 请在 hello.txt 文件中，查找 “yes” 所在行，并且显示行号 解压和压缩类gzip/gunzip 指令gzip 用于压缩文件， gunzip 用于解压的 基本语法gzip 文件 （功能描述：压缩文件，只能将文件压缩为*.gz 文件） gunzip 文件.gz （功能描述：解压缩文件命令） 应用实例案例 1: gzip 压缩， 将 /home 下的 hello.txt 文件进行压缩 案例 2: gunzip 压缩， 将 /home 下的 hello.txt.gz 文件进行解压缩 细节说明当我们使用gzip对文件进行压缩后，不会保留原来的文件 zip/unzip 指令zip 用于压缩文件， unzip 用于解压的，这个在项目打包发布中很有用的 基本语法zip [选项] XXX.zip 将要压缩的内容（功能描述：压缩文件和目录的命令） unzip [选项] XXX.zip （功能描述：解压缩文件） zip 常用选项-r：递归压缩，即压缩目录 unzip 的常用选项-d&lt;目录&gt; ：指定解压后文件的存放目录 应用实例案例 1: 将 /home 下的 所有文件进行压缩成 mypackage.zip 案例 2: 将 mypackge.zip 解压到 /opt/tmp 目录下 tar 指令tar指令是打包指令，最后打包后的文件是 .tar.gz 的文件。 基本语法tar [选项] XXX.tar.gz 打包的内容 (功能描述：打包目录，压缩后的文件格式.tar.gz) 选项说明 选项 功能 -c 产生.tar打包文件 -v 显示详细信息 -f 指定压缩后的文件名 -z 打包同时压缩 -x 解包.tar文件 应用实例案例 1: 压缩多个文件，将 /home/a1.txt 和 /home/a2.txt 压缩成 a.tar.gz 案例 2: 将/home 的文件夹 压缩成 myhome.tar.gz 案例 3: 将 a.tar.gz 解压到当前目录 案例4: 将 myhome.tar.gz 解压到 /opt/ 目录下 指定解压到的那个目录，事先要存在才能成功，否则会报错","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-05-10T13:00:44.875Z","updated":"2020-05-10T13:00:44.875Z","comments":true,"path":"2020/05/10/hello-world/","link":"","permalink":"http://yoursite.com/2020/05/10/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"}]}